{"version":3,"sources":["../code/collection.directive.ts"],"names":[],"mappings":"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","file":"collection.directive.js","sourcesContent":["import { Directive } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { CollectionService } from './collection.service';\r\n// ---------- beg 只能输入日期 ----------\r\n@Directive({\r\n    selector: '[onlyDate]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n        'maxlength': '10',\r\n    },\r\n    providers: [NgModel,CollectionService],\r\n})\r\n\r\nexport class OnlyDateDirective {\r\n    constructor(public control: NgModel, private srv: CollectionService) {\r\n    }\r\n    onkeydown(e) {\r\n        if (!this.srv.onlyDateKeyDownFn(e)) {\r\n            return false;\r\n        }\r\n    }\r\n    /** @internal */\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^0-9-]/g, '')\r\n        this.control.viewToModelUpdate(this.srv.onlyDateKeyUpFn(e));\r\n    }\r\n}\r\n// ---------- end 只能输入日期 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入日期时间 ----------\r\n@Directive({\r\n    selector: '[onlyDateTime]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n        'maxlength': '19',\r\n    },\r\n    providers: [NgModel,CollectionService],\r\n})\r\nexport class OnlyDateTimeDirective {\r\n    constructor(public control: NgModel, private srv: CollectionService) { }\r\n    onkeydown(e) {\r\n        if (e.key !== \"Backspace\") {\r\n            if (!this.srv.onlyDateTimeKeyDownFn(e)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^0-9-\\s*:]/g, '')\r\n\r\n        this.control.viewToModelUpdate(this.srv.onlyDateTimeKeyUpFn(e));\r\n    }\r\n}\r\n// ---------- end 只能输入日期时间 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n@Directive({\r\n    selector: '[onlyEmail]',\r\n    host: {\r\n        '(blur)': 'onblur($event)',\r\n        '(focus)': 'onfocus($event)',\r\n    },\r\n})\r\n\r\nexport class OnlyEmailDirective {\r\n    color: any;\r\n    constructor(public control: NgModel) { }\r\n    onfocus(e) {\r\n        if (e.target.value = \"请输入正确的邮箱\") {\r\n            e.target.value = '';\r\n            e.target.style.color = this.color;\r\n        }\r\n    }\r\n    onblur(e) {\r\n        let reg = /\\w[-\\w.+]*@([A-Za-z0-9][-A-Za-z0-9]+\\.)+[A-Za-z]{2,14}/;\r\n        if (!reg.test(e.target.value)) {\r\n            e.target.value = '请输入正确的邮箱';\r\n            this.color = e.target.style.color;\r\n            e.target.style.color = \"red\";\r\n        }\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n}\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入整数 ----------\r\n@Directive({\r\n    selector: '[onlyInt]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n    },\r\n    providers: [NgModel,CollectionService],\r\n})\r\n\r\nexport class OnlyIntDirective {\r\n    constructor(public control: NgModel, private srv: CollectionService) {\r\n    }\r\n    onkeydown(e) {\r\n        if (!this.srv.onlyIntKeyDownFn(e)) {\r\n            return false;\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^\\d+-]/g, '')\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n}\r\n// ---------- end 只能输入整数 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入浮点数 ----------\r\n@Directive({\r\n    selector: '[onlyFloat]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n        '(blur)': 'onblur($event)'\r\n    },\r\n    providers: [NgModel,CollectionService],\r\n})\r\n\r\nexport class OnlyFloatDirective {\r\n    constructor(public control: NgModel, private srv: CollectionService) {\r\n    }\r\n    onkeydown(e) {\r\n        if (!this.srv.onlyFloatKeyDownFn(e)) {\r\n            return false;\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^\\d+-.]/g, '');\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n\r\n    onblur(e) {\r\n        this.control.viewToModelUpdate(this.srv.blurFn(e));\r\n    }\r\n}\r\n// ---------- end 只能输入浮点数 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入数字 ----------\r\n@Directive({\r\n    selector: '[onlyNumber]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n    },\r\n    providers: [NgModel,CollectionService],\r\n})\r\n\r\nexport class OnlyNumberDirective {\r\n    constructor(public control: NgModel, private srv: CollectionService) {\r\n    }\r\n    onkeydown(e) {\r\n        if (!this.srv.onlyNumberKeyDownFn(e)) {\r\n            return false;\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^\\d+-.]/g, '')\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n}\r\n// ---------- end 只能输入数字 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入汉字 ----------\r\n@Directive({\r\n    selector: '[onlyCh]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n    },\r\n})\r\n\r\nexport class OnlyChDirective {\r\n    constructor(public control: NgModel) {\r\n    }\r\n    onkeydown(e) {\r\n        if (e.key !== \"Backspace\") {\r\n            return false;\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^\\u4e00-\\u9fa5]/g, '');\r\n        // e.target.value = e.target.value.replace(/^([^a-z].*)|(([a-z]\\w*).*\\W.*)$/i,'$3');\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n}\r\n// ---------- end 只能输入汉字 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入英文 ----------\r\n@Directive({\r\n    selector: '[onlyEn]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n    },\r\n})\r\n\r\nexport class OnlyEnDirective {\r\n    constructor(public control: NgModel) {\r\n    }\r\n    onkeydown(e) {\r\n        if (e.key !== \"Backspace\") {\r\n            if (!isNaN(e.key * 1)) {\r\n                return false;\r\n            }\r\n            if (e.code === \"Space\") {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^a-zA-Z\\(\\)]/g, '');\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n}\r\n// ---------- beg 只能输入英文 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n\r\n\r\n// ---------- beg 只能输入英文加数字 ----------\r\n@Directive({\r\n    selector: '[onlyEnNum]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n    },\r\n})\r\n\r\nexport class OnlyEnNumDirective {\r\n    constructor(public control: NgModel) {\r\n    }\r\n    onkeydown(e) {\r\n        if (e.key !== \"Backspace\") {\r\n            if (e.code === \"Space\") {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^a-zA-Z0-9]/g, '');\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n}\r\n// ---------- end 只能输入英文加数字 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入英文加数字符号 ----------\r\n@Directive({\r\n    selector: '[onlyEnNumSign]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n    },\r\n})\r\n\r\nexport class OnlyEnNumSingDirective {\r\n    constructor(public control: NgModel) {\r\n    }\r\n    onkeydown(e) {\r\n        if (e.key !== \"Backspace\") {\r\n            if (e.code === \"Space\") {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^\\w.\\(\\)\\<\\>\\[\\]]/g, '')\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n}\r\n// ---------- end 只能输入英文加数字 ----------\r\n\r\n/*\r\n--------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------\r\n*/\r\n\r\n// ---------- beg 只能输入货币数字 ----------\r\n@Directive({\r\n    selector: '[onlyMoney]',\r\n    host: {\r\n        '(keyup)': 'onkeyup($event)',\r\n        '(keydown)': 'onkeydown($event)',\r\n        '(blur)': 'onblur($event)'\r\n    },\r\n    providers: [NgModel,CollectionService],\r\n})\r\n\r\nexport class OnlyMoneyDirective {\r\n    constructor(public control: NgModel, private srv: CollectionService) {\r\n    }\r\n    onkeydown(e) {\r\n        if (this.srv.keydownCode(e)) {\r\n            if (!this.srv.ifIndexOfFlaot(e, true)) {\r\n                return false;\r\n            }\r\n            if (e.key == \",\") {\r\n                return false;\r\n            }\r\n            if (e.key !== '.') {\r\n                if (!this.srv.isNaNAndSpaceFn(e, true)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onkeyup(e) {\r\n        e.target.value = e.target.value.replace(/[^\\d.,]/g, '');\r\n        let value = e.target.value;\r\n        if (value.indexOf('.') === -1) {\r\n            if (value !== \"\") {\r\n                e.target.value = this.fmoney(value);\r\n            }\r\n        } else {\r\n            let tempValue = value.split('.');\r\n            let newValueOne = this.fmoney(tempValue[0].replace(/\\,/g, '')),\r\n                newValueTwo = tempValue[1];\r\n            if (newValueTwo.length > 2) {\r\n                newValueTwo = newValueTwo.slice(0, newValueTwo.length - 1);\r\n            }\r\n            e.target.value = newValueOne + '.' + newValueTwo;\r\n        }\r\n\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n\r\n    onblur(e) {\r\n        e.target.value = this.srv.blurFn(e);\r\n\r\n        let tempValue = e.target.value.split('.');\r\n        if (tempValue[1].length < 2) {\r\n            e.target.value = e.target.value + '0';\r\n        }\r\n\r\n        this.control.viewToModelUpdate(e.target.value);\r\n    }\r\n\r\n    fmoney(s) {\r\n        s = parseFloat((s + \"\").replace(/[^\\d\\.-]/g, \"\")) + \"\";\r\n        var l = s.split(\".\")[0].split(\"\").reverse(),\r\n            r = s.split(\".\")[1];\r\n        let t = \"\";\r\n        for (let i = 0; i < l.length; i++) {\r\n            t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? \",\" : \"\");\r\n        }\r\n        return t.split(\"\").reverse().join(\"\");\r\n    }\r\n}\r\n// ---------- end 只能输入货币数字 ----------\r\n"]}